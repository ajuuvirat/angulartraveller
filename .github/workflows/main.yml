name: Angular Docker CI/CD Pipeline

on:
  push:
    branches:
      - main  # Trigger the workflow on push to main branch
  pull_request:
    branches:
      - main  # Trigger the workflow on pull request to main branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository
    - name: Checkout repository
      uses: actions/checkout@v3

    # Set up Node.js
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'  # Set Node.js version (change if needed)

    # Install dependencies
    - name: Install dependencies
      run: npm install

    # Build the Angular application
    - name: Build Angular application
      run: npm run build --prod  # The build command may vary if you're using different configurations

    # Build Docker image
    - name: Build Docker image
      run: docker build -t ajuua/sampletest .

    # Log in to Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}  # Store Docker Hub username in GitHub secrets
        password: ${{ secrets.DOCKER_PASSWORD }}  # Store Docker Hub password in GitHub secrets

    # Push Docker image to Docker Hub
    - name: Push Docker image to Docker Hub
      run: docker push ajuua/sampletest

    # Debug Network Connectivity (if needed)
    - name: Debug Network Connectivity
      run: |
        ping -c 4 $SSH_HOST
        nc -zv $SSH_HOST $SSH_PORT

    # Ensure SSH key exists for the deployment (optional)
    - name: Set up SSH key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -p $SSH_PORT $SSH_HOST >> ~/.ssh/known_hosts || { echo "ssh-keyscan failed. Please ensure the server is reachable and the SSH service is running."; exit 1; }

     #Deployment step (if applicable)
    # - name: Deploy to server
    #   run: |
    #     ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "docker pull ajuua/sampletest && docker run -d -p 8080:80 ajuua/sampletest"
