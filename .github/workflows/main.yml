name: Angular Docker CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository
    - name: Checkout repository
      uses: actions/checkout@v3

    # Set up Node.js
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    # Install dependencies
    - name: Install dependencies
      run: npm install

    # Build the Angular application
    - name: Build Angular application
      run: npm run build --prod

    # Build Docker image
    - name: Build Docker image
      run: docker build -t ajuua/sampletest .

    # Log in to Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Push Docker image to Docker Hub
    - name: Push Docker image to Docker Hub
      run: docker push ajuua/sampletest

    # Set SSH_HOST, SSH_USER, and SSH_PORT as environment variables
    - name: Set SSH environment variables
      run: |
        echo "SSH_HOST=64.227.159.217" >> $GITHUB_ENV  # Your server IP address
        echo "SSH_PORT=22" >> $GITHUB_ENV            # SSH port (default is 22)
        echo "SSH_USER=ubuntu" >> $GITHUB_ENV         # Your SSH username

    # Verify SSH_HOST value
    - name: Verify SSH_HOST
      run: echo "SSH_HOST=${{ secrets.SSH_HOST }}"

    # Debug SSH connectivity
    - name: Debug Network Connectivity
      run: |
        echo "Checking SSH connection to $SSH_HOST on port $SSH_PORT"
        nc -zv $SSH_HOST $SSH_PORT || { echo "SSH connection check failed."; exit 1; }

    # Set up SSH key for deployment
    - name: Set up SSH key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -p $SSH_PORT $SSH_HOST >> ~/.ssh/known_hosts || { echo "ssh-keyscan failed. Please ensure the server is reachable."; exit 1; }

    # Pull the latest Docker image from Docker Hub and deploy to the server
    - name: Pull Docker image from Docker Hub and deploy to server
      run: |
        ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "
          docker pull ajuua/sampletest &&
          docker stop sampletest || true &&
          docker rm sampletest || true &&
          docker run -d -p 8100:80 --name sampletest ajuua/sampletest
        "
