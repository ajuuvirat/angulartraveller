name: Deploy to Remote Server

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the code from the repository
    - name: Checkout code
      uses: actions/checkout@v2

    # Step 2: Set up SSH key
    - name: Set up SSH key
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    # Step 3: Test SSH connection to remote server (for debugging)
    - name: Test SSH connection
      run: |
        echo "Attempting SSH connection to ${SSH_USERNAME}@${SSH_HOST} on port 22"
        ssh -v -i ${{ secrets.SSH_PRIVATE_KEY }} ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} -p 22 || { echo 'SSH connection failed'; exit 1; }

    # Step 4: Run SSH commands on the remote server
    - name: Run deployment script via SSH
      uses: appleboy/ssh-action@v0.1.3
      with:
        host: ${{ secrets.SSH_HOST }}   # The actual host (IP or FQDN)
        username: ${{ secrets.SSH_USERNAME }}  # Your SSH username
        key: ${{ secrets.SSH_PRIVATE_KEY }}   # The SSH private key secret
        port: 22
        timeout: 60s
        debug: true
        script: |
          # Pull the latest Docker image
          docker pull ajuua/sampletest:latest
          
          # Stop and remove the old container (if running)
          docker ps -q -f "name=sampletest" | grep -q . && docker stop sampletest && docker rm sampletest
          
          # Run the new container in detached mode
          docker run -d --name sampletest -p 8080:80 ajuua/sampletest:latest

    # Optional: Clean up Docker images (optional)
    - name: Clean up Docker images (optional)
      run: |
        docker image prune -f  # Remove unused images
        docker container prune -f  # Remove stopped containers
